/*
               step 1
To understand the business insight and provide trends and solution in cusomer info table
join all the customer tables that share relationship
after join, use a subquery and check if any joined table have a duplicate data

              step2 
the customer gender appear in 2 different column after the joining columns together
lets use sql integration to sort it out by first identifing the master table between 3 joined table
the master table should be the cust_info as the other 2 table was joined to it
so it means that the cust_info table have the most accurate value
so let's integrate this 2 columns using CASE WHEN on this logic

after the integration, rename the columns to have more meaningful name
and then oreder them accordingly
After ordering the columns accordingly, it's shown that all the columns are dimentions which...
all the customer's infos, there is no fact on this table and so this table can be called dimention table
ROW_NUMBER function is added to generate a surragete key(index key) to identify the tables rows uniquely

lastly create a view object into the gold schema 
*/

/* step 1 */
SELECT cst_id, COUNT(*) FROM (
SELECT 
	ci.cst_id,
	ci.cst_key,
	ci.cst_firstname,
	ci.cst_lastname,
	ci.cst_marital_status,
	ci.cst_gndr,
	ci.cst_create_date,
	ca.bdate,
	ca.gen,
	la.cntry
FROM silver.crm_cust_info ci
LEFT JOIN silver.erp_cust_az12 ca
ON	ci.cst_key = ca.cid
LEFT JOIN silver.erp_loc_a101 la
ON	ci.cst_key = la.cid
)t GROUP BY cst_id
HAVING COUNT(*) > 1

/* step 2 */
SELECT DISTINCT
	ci.cst_gndr,
	ca.gen,
CASE WHEN ci.cst_gndr != 'Not answered' THEN ci.cst_gndr
		ELSE COALESCE(ca.gen, 'Not answered')
END AS new_gender
FROM silver.crm_cust_info ci
LEFT JOIN silver.erp_cust_az12 ca
ON	ci.cst_key = ca.cid
LEFT JOIN silver.erp_loc_a101 la
ON	ci.cst_key = la.cid
ORDER BY 1,2

CREATE VIEW gold.customers_dimention AS
SELECT
	ROW_NUMBER() OVER (ORDER BY cst_id) AS customer_index_key,
	ci.cst_id AS customer_id,
	ci.cst_key AS customer_reg_number,
	ci.cst_firstname AS first_name,
	ci.cst_lastname AS last_name,
	la.cntry AS country,
	ci.cst_marital_status AS marital_status,
	CASE WHEN ci.cst_gndr != 'Not answered' THEN ci.cst_gndr
		ELSE COALESCE(ca.gen, 'Not answered')
	END AS gender,
	ca.bdate AS birthday,
	ci.cst_create_date AS create_date
FROM silver.crm_cust_info ci
LEFT JOIN silver.erp_cust_az12 ca
ON	ci.cst_key = ca.cid
LEFT JOIN silver.erp_loc_a101 la
ON	ci.cst_key = la.cid

select * from bronze.crm_cust_info
select * from silver.erp_loc_a101
