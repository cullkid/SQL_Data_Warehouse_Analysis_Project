/*
create a gold layer schema by joining all the tables with the primary and secondary keys on..
customer info, product info and sales info
*/

CREATE VIEW gold.customers_dimention AS
SELECT
	ROW_NUMBER() OVER (ORDER BY cst_id) AS customer_index_key,
	ci.cst_id AS customer_id,
	ci.cst_key AS customer_reg_number,
	ci.cst_firstname AS first_name,
	ci.cst_lastname AS last_name,
	la.cntry AS country,
	ci.cst_marital_status AS marital_status,
	CASE WHEN ci.cst_gndr != 'Not answered' THEN ci.cst_gndr
		ELSE COALESCE(ca.gen, 'Not answered')
	END AS gender,
	ca.bdate AS birthday,
	ci.cst_create_date AS create_date
FROM silver.crm_cust_info ci
LEFT JOIN silver.erp_cust_az12 ca
ON	ci.cst_key = ca.cid
LEFT JOIN silver.erp_loc_a101 la
ON	ci.cst_key = la.cid

CREATE VIEW gold.products_dimention AS
SELECT
ROW_NUMBER() OVER (ORDER BY pn.prd_start_dt, pn.prd_key) AS product_index,
pn.prd_id AS product_id,
pn.prd_key AS product_number,
pn.prd_nm AS product_name,
pn.cat_id AS category_id,
cat AS category,
subcat AS sub_category,
maintenance AS maintenance,
pn.prd_cost AS cost,
pn.prd_line AS product_line,
pn.prd_start_dt AS start_dates
FROM silver.crm_prd_info pn
LEFT JOIN silver.erp_px_cat_g1v2 ct
ON pn.cat_id = ct.id
WHERE pn.prd_end_dt IS NULL

CREATE VIEW gold.sales_fact AS
SELECT 
sd.sls_ord_num AS order_number,
pd.product_index,
cd.customer_index_key,
sd.sls_order_dt AS order_date,
sd.sls_ship_dt AS shipping_date,
sd.sls_due_dt AS due_date,
sd.sls_sales AS sales_amount,
sd.sls_quantity AS qiantity,
sd.sls_price AS price
FROM silver.crm_sales_details sd
LEFT JOIN gold.customers_dimention cd
ON sd.sls_cust_id = cd.customer_id
LEFT JOIN gold.products_dimention pd
ON sd.sls_prd_key = pd.product_number
